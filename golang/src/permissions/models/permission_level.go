package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*PermissionLevel A permission level name.

swagger:model permission_level
*/
type PermissionLevel string

// for schema
var permissionLevelEnum []interface{}

func (m PermissionLevel) validatePermissionLevelEnum(path, location string, value PermissionLevel) error {
	if permissionLevelEnum == nil {
		var res []PermissionLevel
		if err := json.Unmarshal([]byte(`["read","admin","write","own"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			permissionLevelEnum = append(permissionLevelEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, permissionLevelEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this permission level
func (m PermissionLevel) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePermissionLevelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
