package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"permissions/models"
)

/*AddResourceCreated Created

swagger:response addResourceCreated
*/
type AddResourceCreated struct {

	// In: body
	Payload *models.ResourceOut `json:"body,omitempty"`
}

// NewAddResourceCreated creates AddResourceCreated with default headers values
func NewAddResourceCreated() *AddResourceCreated {
	return &AddResourceCreated{}
}

// WithPayload adds the payload to the add resource created response
func (o *AddResourceCreated) WithPayload(payload *models.ResourceOut) *AddResourceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add resource created response
func (o *AddResourceCreated) SetPayload(payload *models.ResourceOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddResourceCreated) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddResourceBadRequest Bad Request

swagger:response addResourceBadRequest
*/
type AddResourceBadRequest struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewAddResourceBadRequest creates AddResourceBadRequest with default headers values
func NewAddResourceBadRequest() *AddResourceBadRequest {
	return &AddResourceBadRequest{}
}

// WithPayload adds the payload to the add resource bad request response
func (o *AddResourceBadRequest) WithPayload(payload *models.ErrorOut) *AddResourceBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add resource bad request response
func (o *AddResourceBadRequest) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddResourceBadRequest) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddResourceInternalServerError add resource internal server error

swagger:response addResourceInternalServerError
*/
type AddResourceInternalServerError struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewAddResourceInternalServerError creates AddResourceInternalServerError with default headers values
func NewAddResourceInternalServerError() *AddResourceInternalServerError {
	return &AddResourceInternalServerError{}
}

// WithPayload adds the payload to the add resource internal server error response
func (o *AddResourceInternalServerError) WithPayload(payload *models.ErrorOut) *AddResourceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add resource internal server error response
func (o *AddResourceInternalServerError) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddResourceInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
