package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// ListResourcePermissionsHandlerFunc turns a function with the right signature into a list resource permissions handler
type ListResourcePermissionsHandlerFunc func(ListResourcePermissionsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListResourcePermissionsHandlerFunc) Handle(params ListResourcePermissionsParams) middleware.Responder {
	return fn(params)
}

// ListResourcePermissionsHandler interface for that can handle valid list resource permissions params
type ListResourcePermissionsHandler interface {
	Handle(ListResourcePermissionsParams) middleware.Responder
}

// NewListResourcePermissions creates a new http.Handler for the list resource permissions operation
func NewListResourcePermissions(ctx *middleware.Context, handler ListResourcePermissionsHandler) *ListResourcePermissions {
	return &ListResourcePermissions{Context: ctx, Handler: handler}
}

/*ListResourcePermissions swagger:route GET /permissions/resources/{resource_type}/{resource_name} permissions listResourcePermissions

List Resource Permissions

Lists all of the permissions associated with a resource.

*/
type ListResourcePermissions struct {
	Context *middleware.Context
	Handler ListResourcePermissionsHandler
}

func (o *ListResourcePermissions) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListResourcePermissionsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
