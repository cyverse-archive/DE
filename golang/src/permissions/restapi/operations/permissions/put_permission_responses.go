package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"permissions/models"
)

/*PutPermissionOK OK

swagger:response putPermissionOK
*/
type PutPermissionOK struct {

	// In: body
	Payload *models.Permission `json:"body,omitempty"`
}

// NewPutPermissionOK creates PutPermissionOK with default headers values
func NewPutPermissionOK() *PutPermissionOK {
	return &PutPermissionOK{}
}

// WithPayload adds the payload to the put permission o k response
func (o *PutPermissionOK) WithPayload(payload *models.Permission) *PutPermissionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put permission o k response
func (o *PutPermissionOK) SetPayload(payload *models.Permission) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPermissionOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutPermissionBadRequest Bad Request

swagger:response putPermissionBadRequest
*/
type PutPermissionBadRequest struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewPutPermissionBadRequest creates PutPermissionBadRequest with default headers values
func NewPutPermissionBadRequest() *PutPermissionBadRequest {
	return &PutPermissionBadRequest{}
}

// WithPayload adds the payload to the put permission bad request response
func (o *PutPermissionBadRequest) WithPayload(payload *models.ErrorOut) *PutPermissionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put permission bad request response
func (o *PutPermissionBadRequest) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPermissionBadRequest) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutPermissionInternalServerError put permission internal server error

swagger:response putPermissionInternalServerError
*/
type PutPermissionInternalServerError struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewPutPermissionInternalServerError creates PutPermissionInternalServerError with default headers values
func NewPutPermissionInternalServerError() *PutPermissionInternalServerError {
	return &PutPermissionInternalServerError{}
}

// WithPayload adds the payload to the put permission internal server error response
func (o *PutPermissionInternalServerError) WithPayload(payload *models.ErrorOut) *PutPermissionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put permission internal server error response
func (o *PutPermissionInternalServerError) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPermissionInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
