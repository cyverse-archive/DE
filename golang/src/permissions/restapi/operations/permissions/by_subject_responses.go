package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"permissions/models"
)

/*BySubjectOK OK

swagger:response bySubjectOK
*/
type BySubjectOK struct {

	// In: body
	Payload *models.PermissionList `json:"body,omitempty"`
}

// NewBySubjectOK creates BySubjectOK with default headers values
func NewBySubjectOK() *BySubjectOK {
	return &BySubjectOK{}
}

// WithPayload adds the payload to the by subject o k response
func (o *BySubjectOK) WithPayload(payload *models.PermissionList) *BySubjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the by subject o k response
func (o *BySubjectOK) SetPayload(payload *models.PermissionList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BySubjectOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BySubjectBadRequest Bad Request

swagger:response bySubjectBadRequest
*/
type BySubjectBadRequest struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewBySubjectBadRequest creates BySubjectBadRequest with default headers values
func NewBySubjectBadRequest() *BySubjectBadRequest {
	return &BySubjectBadRequest{}
}

// WithPayload adds the payload to the by subject bad request response
func (o *BySubjectBadRequest) WithPayload(payload *models.ErrorOut) *BySubjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the by subject bad request response
func (o *BySubjectBadRequest) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BySubjectBadRequest) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BySubjectInternalServerError by subject internal server error

swagger:response bySubjectInternalServerError
*/
type BySubjectInternalServerError struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewBySubjectInternalServerError creates BySubjectInternalServerError with default headers values
func NewBySubjectInternalServerError() *BySubjectInternalServerError {
	return &BySubjectInternalServerError{}
}

// WithPayload adds the payload to the by subject internal server error response
func (o *BySubjectInternalServerError) WithPayload(payload *models.ErrorOut) *BySubjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the by subject internal server error response
func (o *BySubjectInternalServerError) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BySubjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
