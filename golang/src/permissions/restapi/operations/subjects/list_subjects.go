package subjects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// ListSubjectsHandlerFunc turns a function with the right signature into a list subjects handler
type ListSubjectsHandlerFunc func() middleware.Responder

// Handle executing the request and returning a response
func (fn ListSubjectsHandlerFunc) Handle() middleware.Responder {
	return fn()
}

// ListSubjectsHandler interface for that can handle valid list subjects params
type ListSubjectsHandler interface {
	Handle() middleware.Responder
}

// NewListSubjects creates a new http.Handler for the list subjects operation
func NewListSubjects(ctx *middleware.Context, handler ListSubjectsHandler) *ListSubjects {
	return &ListSubjects{Context: ctx, Handler: handler}
}

/*ListSubjects swagger:route GET /subjects subjects listSubjects

List Subjects

Lists subjects (entities to which permissions may be gratned) that exist in the database.

*/
type ListSubjects struct {
	Context *middleware.Context
	Handler ListSubjectsHandler
}

func (o *ListSubjects) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)

	if err := o.Context.BindValidRequest(r, route, nil); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle() // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
