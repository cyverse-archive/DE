package subjects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"permissions/models"
)

/*ListSubjectsOK OK

swagger:response listSubjectsOK
*/
type ListSubjectsOK struct {

	// In: body
	Payload *models.SubjectsOut `json:"body,omitempty"`
}

// NewListSubjectsOK creates ListSubjectsOK with default headers values
func NewListSubjectsOK() *ListSubjectsOK {
	return &ListSubjectsOK{}
}

// WithPayload adds the payload to the list subjects o k response
func (o *ListSubjectsOK) WithPayload(payload *models.SubjectsOut) *ListSubjectsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list subjects o k response
func (o *ListSubjectsOK) SetPayload(payload *models.SubjectsOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListSubjectsOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ListSubjectsInternalServerError list subjects internal server error

swagger:response listSubjectsInternalServerError
*/
type ListSubjectsInternalServerError struct {

	// In: body
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewListSubjectsInternalServerError creates ListSubjectsInternalServerError with default headers values
func NewListSubjectsInternalServerError() *ListSubjectsInternalServerError {
	return &ListSubjectsInternalServerError{}
}

// WithPayload adds the payload to the list subjects internal server error response
func (o *ListSubjectsInternalServerError) WithPayload(payload *models.ErrorOut) *ListSubjectsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list subjects internal server error response
func (o *ListSubjectsInternalServerError) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListSubjectsInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
