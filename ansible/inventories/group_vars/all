ansible_ssh_port: 22
global_config_dir: /etc/iplant
de_config_dir: "{{ global_config_dir }}/de"
local_cfg_dest: cfg_files

# A proxy host and port to be used by the database initialization utility,
# facepalm. This does not affect network requests not made by facepalm.
facepalm_proxy_host: null
facepalm_proxy_port: 80

docker:
  log_driver: syslog
  tag: latest
  user: discoenv
  version: 1.9.1
  compose_path: /etc/docker-compose.yml
  registry:
    host: "{{ groups['docker-registry'][0] }}"
    port: 5000
    base: "{{ groups['docker-registry'][0] }}:5000"

java:
  version: 1.7.0

# Indicates whether or not this environment is a complete environment or piggybacks off some other
# environment
parasitic: false

max_heap:
  low: "512M"
  high: "1G"

################################################################################
#                         Configuration Settings
################################################################################
admin_groups:

default_service_port: 60000

agave:
  base_url: https://agave.iplantc.org
  read_timeout: 10000
  page_length: 5000
  oauth_refresh_window: 5
  client_key:
  client_secret:

amqp_password:
amqp_user:
amqp_de_exchange:
amqp_de_exchange_durable: true
amqp_de_exchange_auto_delete: false
amqp_irods_exchange: irods
amqp_irods_exchange_type: topic
amqp_irods_exchange_durable: true
amqp_irods_exchange_auto_delete: false
amqp_irods_connection_health_check_interval: 5000

amqp_broker:
  host: "{{ groups['amqp-brokers'][0] }}"
  port:
  condor_events:
    exchange: condor_events
    exchange_type: fanout
    exchange_durable: true
    exchange_routing_key:
    queue_name:
    exchange_auto_delete: false

anon_files:
  host: "{{ groups['anon-files'][0] }}"
  port:
  base: "http://{{ groups['anon-files'][0] }}"
  proxy_url: "https://{{ groups['ui'][0] }}/anon-files/"
  anon_user: anonymous
  service_name: anon-files.service
  service_name_short: anon-files
  compose_service: anon_files
  service_description: anon-files service
  image_name: anon-files
  log_driver: "{{ docker.log_driver }}"
  container_name: anon-files
  properties_file: anon-files.properties
  log_file: anon-files-docker.log
  max_heap: "{{ max_heap.low }}"

## App Settings
de_base:
de:
  host: "{{ groups['ui'][0] }}"
  base: "https://{{ groups['ui'][0] }}/de"
  app_base: "https://{{ groups['ui'][0] }}"
  service_name: de-ui.service
  service_name_short: ui
  compose_service: de_ui
  service_description: DE UI; iPlant Discovery Environment user interface
  image_name: de
  container_name: de_ui
  log_driver: "{{ docker.log_driver }}"
  log_file: de-ui.log
  context_menu_enabled: false
  description: the CyVerse Discovery Environment
  empty_url: empty
  app_name: de
  rpc_name: discoveryenvironment
  notification_poll: 15
  maintenance_file: de-maintenance
  http_server:
    service_name: de-ui-nginx.service
    service_name_short: de-ui-nginx
    compose_service: de_ui_nginx
    service_description: DE UI nginx
    image_name: nginx
    container_name: de_ui_nginx
    log_driver: "{{ docker.log_driver }}"
    log_file: nginx-de-ui.log
    ssl:
      server_name: "{{ nginx_ssl.server_name }}"
      cert: "{{ nginx_ssl.cert }}"
      cert_key: "{{ nginx_ssl.cert_key }}"
      insecure_redirects:
        - server_name: "{{ nginx_ssl.server_name }}"
          return: "https://$host$request_uri"
#      redirects:
#        - server_name: "~^(?<basename>[^.]+)[.]example[.]com$"
#          return: "https://$basename.example.org$request_uri"
#          ssl_certificate: "/etc/ssl/example.com.crt"
#          ssl_certificate_key: "/etc/ssl/example.com.key"

de_version_name: Phthalo
de_version: 2.5.0

de_feedback_to_addr: ""
de_mail_from_addr: "{{ de_feedback_to_addr }}"
de_mail_to_addr: "{{ de_feedback_to_addr }}"


cas_base:
cas_group_attribute: entitlement
cas_uid_domain:

cas_no_logout_url: http://user.iplantcollaborative.org
cas_app_list: all CyVerse applications

chat_room_url:

condor_submission_ip_range:
condor_allow_write: "*.example.org,{{ condor_submission_ip_range }}"
condor:
  host:
  admin: grid@example.org
  collector_name: "{{ environment_name }} pool"
  flock_to:
  filesystem_domain: example.org
  uid_domain: example.org
  allow_write: "{{ condor_allow_write }}"
  allow_read: "{{ condor_allow_write }}"

condor_log_monitor_event_log: /var/log/condor/event_log
condor_log_monitor:
  service_name: condor-log-monitor.service
  service_name_short: condor-log-monitor
  compose_service: clm
  service_description: CLM; Condor log monitor
  image_name: jex-events
  container_name: clm
  properties_file: jexevents.properties
  log_file: condor-log-monitor-docker.log

coge:
  user: coge
  base_url: https://genomevolution.org/coge/api/v1
  data_folder_name: coge_data
  genome_load_url: https://genomevolution.org/CoGe/services/service.pl/genome/load

clockwork:
  service_name: clockwork.service
  service_name_short: clockwork
  compose_service: clockwork
  service_description: clockwork service
  image_name: clockwork
  container_name: clockwork
  properties_file: clockwork.properties
  log_file: clockwork-docker.log
  max_heap: "{{ max_heap.low }}"

data_info:
  host: "{{ groups['data-info'][0] }}"
  port:
  service_name: data-info.service
  service_name_short: data-info
  compose_service: data_info
  service_description: data-info service
  image_name: data-info
  container_name: data-info
  properties_file: data-info.properties
  log_file: data-info-docker.log
  max_heap: "{{ max_heap.high }}"

dewey_listen_port:

db_driver: org.postgresql.Driver
db_user:
db_password:
db_host: "{{ groups['db'][0] }}"
db_name: de
db_port: 5432
db_admin: postgres
db_admin_password:

db_vendor: postgresql
db_allowed_IPv4_remote:
#  - "X.X.X.X/XX"

dewey:
  service_name: dewey.service
  service_name_short: dewey
  compose_service: dewey
  service_description: dewey service
  image_name: dewey
  container_name: dewey
  properties_file: dewey.properties
  log_file: dewey-docker.log
  max_heap: "{{ max_heap.low }}"

terrain:
  host: "{{ groups['terrain'][0] }}"
  port:
  base: http://{{ groups['terrain'][0] }}
  service_name: terrain.service
  service_name_short: terrain
  compose_service: terrain
  service_description: terrain service
  image_name: terrain
  container_name: terrain
  properties_file: terrain.properties
  log_file: terrain-docker.log
  max_heap: "{{ max_heap.high }}"

email_smtp_host: 127.0.0.1
email_smtp_from_address:
iplant_email:
  host: "{{ groups['iplant-email'][0] }}"
  port:
  base: http://{{ groups['iplant-email'][0] }}
  service_name: iplant-email.service
  service_name_short: iplant-email
  compose_service: iplant_email
  service_description: iPlant Email service
  image_name: iplant-email
  container_name: iplant-email
  properties_file: iplant-email.properties
  log_file: iplant-email-docker.log
  max_heap: "{{ max_heap.low }}"

environment_name:

elasticsearch:
  host: "{{ groups['elasticsearch'][0] }}"
  port:
  base: "http://{{ groups['elasticsearch'][0] }}"
  scroll_size: 1000
  cluster_name: elasticsearch
  data_index: data
  heap_size:
  network_http_port:
  network_transport_tcp_port:

exim:
  service_name: exim-sender.service
  service_name_short: exim-sender
  compose_service: exim_sender
  service_description: exim-sender service
  image_name: exim-sender
  container_name: exim
  log_file: exim-docker.log

fs_max_paths_in_request: 1000

gpg_home_dir:

group_config:

grouper:
  service_name: iplant-grouper.service
  service_name_short: iplant-grouper
  compose_service: iplant_grouper
  service_description: Grouper UI and Web Services
  image_name: iplant-grouper
  init_image: sharkbait
  log_driver: "{{ docker.log_driver }}"
  max_heap_size: 2048M
  max_perm_size: 256M
  admin:
    user:
    pass:
  api:
    env_name:
  container_name: grouper
  db:
    url:
    user:
    pass:
  http_server:
    service_name: grouper-nginx.service
    service_name_short: grouper-nginx
    compose_service: grouper_nginx
    service_description: Grouper nginx
    image_name: "{{ de.http_server.image_name }}"
    container_name: grouper-nginx
    log_driver: "{{ docker.log_driver }}"
    ssl:
      servers:
        - server_name: "{{ nginx_ssl.server_name }}"
          ssl_certificate: "{{ nginx_ssl.cert }}"
          ssl_certificate_key: "{{ nginx_ssl.cert_key }}"
      insecure_redirects:
        - server_name: "{{ nginx_ssl.server_name }}"
          return: "https://$host$request_uri"
  subject_source:
    id:
    name:
    url:
    auth_type:
    principal:
    credentials:
  ui:
    base_url:
  ws:
    base_url:

icat:
  host: "{{ groups['icat'][0] }}"
  port: 5432
  user:
  password:
  db: ICAT

infosquito:
  host: "{{ groups['infosquito'][0] }}"
  service_name: infosquito.service
  service_name_short: infosquito
  compose_service: infosquito
  service_description: infosquito service
  image_name: infosquito
  container_name: infosquito
  properties_file: infosquito.properties
  log_file: infosquito-docker.log
  notify_enabled: true
  notify_count: 10000
  retry_interval: 900
  max_heap: "{{ max_heap.low }}"

info_typer:
  host: "{{ groups['info-typer'][0] }}"
  service_name: info-typer.service
  service_name_short: info-typer
  compose_service: info_typer
  service_description: info-typer service
  image_name: info-typer
  container_name: info-typer
  properties_file: info-typer.properties
  log_file: info-typer-docker.log
  max_heap: "{{ max_heap.low }}"

iplant_groups:
  host: "{{ groups['iplant-groups'][0] }}"
  port:
  base_url: "http://{{ groups['iplant-groups'][0] }}"
  service_name: iplant-groups.service
  service_name_short: iplant-groups
  compose_service: iplant_groups
  service_description: iplant-groups service
  image_name: iplant-groups
  container_name: iplant-groups
  properties_file: iplant-groups.properties
  log_file: iplant-groups-docker.log
  grouper:
    username: "{{ grouper.admin.user }}"
    password: "{{ grouper.admin.pass }}"
    api_version: "v2_2_000"
    base_url: "{{ grouper.ws.base_url }}"
  max_heap: "{{ max_heap.low }}"

irods_admin_users: "{{ irods.user }},{{ irods.admins }}"
irods:
  host: "{{ groups['irods'][0] }}"
  port: 1247
  user:
  password:
  zone: iplant
  home: /iplant/home
  default_resource: ""
  admins: rodsadmin
  data_curators_group: data-curators
  bad_chars: \u0060\u0027\u000A\u0009

# Jex does not actually have a container. The container name is how most syslog entries
# are identified. See rsyslog-config role.
jex:
  host: "{{ groups['jex'][0] }}"
  port:
  base: http://{{ groups['jex'][0] }}
  service_name: jex.service
  service_name_short: jex
  compose_service: jex
  log_file: jex/jex.log
  container_name: jex
  batch_group: batch_processing
  nfs_base:
  icommands_path: /usr/local/icommands/:/usr/local/bin/:/usr/bin/
  request_disk: 0

jexdb_driver: "{{db_driver}}"
jexdb_host: "{{db_host}}"
jexdb_db: jex
jexdb_password: "{{db_password}}"
jexdb_port: "{{db_port}}"
jexdb_user: "{{db_user}}"
jexdb_vendor: "{{db_vendor}}"

jexevents:
  host: "{{ groups['jexevents'][0] }}"
  port:
  base: "http://{{ groups['jexevents'][0] }}/"
  event_url: "{{ apps.base }}/callbacks/de-job"
  service_name: jexevents.service
  service_name_short: jexevents
  compose_service: jex_events
  service_description: jex events service
  image_name: jex-events
  container_name: jex-events
  properties_file: jexevents.properties
  log_file: jex-events-docker.log

job_status_poll_interval: 15

jwt:
  signing_key:
    private: "{{ global_config_dir }}/crypto/private-key.pem"
    public: "{{ global_config_dir }}/crypto/public-key.pem"
    password:
    algorithm: "rs256"
  accepted_keys:
    dir: "{{ global_config_dir }}/crypto/accepted_keys"
  validity_window:
    end: 300
  wso2:
    header: x-jwt-assertion-iplant-org

kifshare_external_url: "http://{{ de.host }}/{{ kifshare.external_url_suffix }}"
kifshare:
  host: "{{ groups['kifshare'][0] }}"
  port:
  external_url_suffix: dl
  service_name: kifshare.service
  service_name_short: kifshare
  compose_service: kifshare
  service_description: kifshare service
  image_name: kifshare
  container_name: kifshare
  properties_file: kifshare.properties
  log_file: kifshare-docker.log
  de_url: \{\{url\}\}/d/\{\{ticket-id\}\}/\{\{filename\}\}
  mode: prod
  download_buffer_size: 100
  max_heap: "{{ max_heap.low }}"

apps:
  host: "{{ groups['apps'][0] }}"
  port:
  base: "http://{{ groups['apps'][0] }}"
  service_name: apps.service
  service_name_short: apps
  compose_service: apps
  service_description: apps service
  image_name: apps
  container_name: apps
  properties_file: apps.properties
  log_file: apps-docker.log
  out_dir: analyses
  path_list_max_paths: 16
  path_list_max_size: 1048576
  beta_category: 5401bd14-6c14-4470-aedd-57b47ea1b979
  user_root: Workspace
  user_subs: "[\"Apps under development\",\"Favorite Apps\"]"
  trash_category: Trash
  max_heap: "{{ max_heap.high }}"

metadata_db_driver: "{{ db_driver }}"
metadata_db_vendor: "{{ db_vendor }}"
metadata_db_host: "{{ db_host }}"
metadata_db_port: "{{ db_port }}"
metadata_db_user: "{{ db_user }}"
metadata_db_password: "{{ db_password }}"
metadata_db_name: metadata
metadata_db_admin: "{{ db_admin }}"
metadata_db_admin_password: "{{ db_admin_password }}"

metadata:
  host: "{{ groups['metadata'][0] }}"
  port:
  service_name: metadata.service
  service_name_short: metadata
  compose_service: metadata
  service_description: metadata service
  image_name: metadata
  container_name: metadata
  properties_file: metadata.properties
  log_file: metadata-docker.log
  max_heap: "{{ max_heap.high }}"


monkey:
  host: "{{ groups['monkey'][0] }}"
  service_name: monkey.service
  service_name_short: monkey
  compose_service: monkey
  service_description: monkey service
  image_name: monkey
  container_name: monkey
  properties_file: monkey.properties
  log_file: monkey-docker.log
  max_heap: "{{ max_heap.low }}"

nginx_ssl:
  server_name:
  cert:
  cert_key:
# server_name: "~^[^.]+[.]example[.]org$"
# cert: "/etc/ssl/example.crt"
# cert_key: "/etc/ssl/example.key"


notificationagent:
  host: "{{ groups['notificationagent'][0] }}"
  port:
  base: "http://{{ groups['notificationagent'][0] }}"
  service_name: notificationagent.service
  service_name_short: notificationagent
  compose_service: notification_agent
  service_description: notification agent service
  image_name: notificationagent
  container_name: notificationagent
  properties_file: notificationagent.properties
  log_file: notificationagent-docker.log
  clean_start: "1:45:00"
  clean_age: 90
  clean_enable: "true"
  max_heap: "{{ max_heap.low }}"

notification_db_driver: "{{ db_driver }}"
notification_db_vendor: "{{ db_vendor }}"
notification_db_port: "{{ db_port }}"
notification_db_host: "{{ db_host }}"
notification_db_name: notifications
notification_db_password: "{{ db_password }}"
notification_db_user: "{{ db_user }}"
notification_db_admin: "{{ db_admin }}"
notification_db_admin_password: "{{ db_admin_password }}"

path_list_file_identifier: "# application/vnd.de.path-list+csv; version=1"
path_list_info_type: ht-analysis-path-list

permanent_id:
  admin_email_addr: "{{ de_mail_to_addr }}"
  email_from_addr: "{{ de_mail_from_addr }}"
  ezid:
    username: apitest
    password:
    shoulders:
      ark: "ark:/99999/fk4"
      doi: "doi:10.5072/FK2"

pgp_keyring_path: "{{ gpg_home_dir }}/secring.gpg"
pgp_key_password:

prod_deployment: false

saved_searches_log_file: /logs/saved-searches.log
saved_searches:
  host: "{{ groups['saved-searches'][0] }}"
  port:
  service_name: saved-searches.service
  service_name_short: saved-searches
  compose_service: saved_searches
  service_description: saved searches services
  image_name: saved-searches
  container_name: saved-searches
  properties_file: saved-searches.properties
  log_file: saved-searches-docker.log
  max_heap: "{{ max_heap.low }}"

search_default_limit: 200

tree_parser_base: http://portnoy.iplantcollaborative.org/parseTree

tree_urls_log_file: /logs/tree-urls.log
tree_urls:
  host: "{{ groups['tree-urls'][0] }}"
  port:
  service_name: tree-urls.service
  service_name_short: tree-urls
  compose_service: tree_urls
  service_description: Tree urls service
  image_name: tree-urls
  container_name: tree-urls
  properties_file: tree-urls.properties
  log_file: tree-urls-docker.log
  cleanup_age: 30
  cleanup_start: "1:30:00"
  cleanup_enable: "true"
  avu: tree-urls
  max_heap: "{{ max_heap.low }}"

timezone: America/Phoenix

user_info:
  base:
  client_key:
  client_secret:

user_preferences_log_file: /logs/user-preferences.log
user_preferences:
  host: "{{ groups['user-preferences'][0] }}"
  port:
  service_name: user-preferences.service
  service_name_short: user-preferences
  compose_service: user_preferences
  service_description: user preferences service
  image_name: user-preferences
  container_name: user-preferences
  properties_file: user-preferences.properties
  log_file: user-preferences-docker.log
  max_heap: "{{ max_heap.low }}"

user_sessions_log_file: /logs/user-sessions.log
user_sessions:
  host: "{{ groups['user-sessions'][0] }}"
  port:
  service_name: user-sessions.service
  service_name_short: user-sessions
  compose_service: user_sessions
  service_description: user sessions service
  image_name: user-sessions
  container_name: user-sessions
  properties_file: user-sessions.properties
  log_file: user-sessions-docker.log
  max_heap: "{{ max_heap.low }}"

## iPlant data container
data_container:
  image_name: iplant_data
  container_name: iplant_data
  service_name: iplant-data.service
  service_name_short: iplant-data
  compose_service: iplant_data
  service_description: The iPlant Discovery Environment data container
  ssl:
    cert: "{{ nginx_ssl.cert }}"
    key: "{{ nginx_ssl.cert_key }}"
    gd_bundle_crt: /etc/ssl/gd_bundle.crt
  keystore:
    path: /etc/ssl/example.pkcs12
    password:
    type: pkcs12

time: "{{ansible_date_time.date}}:{{ansible_date_time.time}}"

logging:
  dir: /var/log/de
  conf_dir: "{{de_config_dir}}/logging"
